//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.10.28 at 06:26:00 PM MEZ 
//


package org.omg.schema.spec.kdm._1_1.conceptual;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ConceptualRole complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ConceptualRole">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schema.omg.org/spec/KDM/1.1/conceptual}AbstractConceptualElement">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="conceptualElement" type="{http://schema.omg.org/spec/KDM/1.1/conceptual}AbstractConceptualElement"/>
 *       &lt;/choice>
 *       &lt;attribute name="conceptualElement" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConceptualRole", propOrder = {
    "conceptualElement"
})
public class ConceptualRole
    extends AbstractConceptualElement
{

    protected List<AbstractConceptualElement> conceptualElement;
    @XmlAttribute(name = "conceptualElement")
    protected String altConceptualElement;

    /**
     * Gets the value of the conceptualElement property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptualElement property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptualElement().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AbstractConceptualElement }
     * 
     * 
     */
    public List<AbstractConceptualElement> getConceptualElement() {
        if (conceptualElement == null) {
            conceptualElement = new ArrayList<AbstractConceptualElement>();
        }
        return this.conceptualElement;
    }

    /**
     * Gets the value of the altConceptualElement property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAltConceptualElement() {
        return altConceptualElement;
    }

    /**
     * Sets the value of the altConceptualElement property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAltConceptualElement(String value) {
        this.altConceptualElement = value;
    }

}
